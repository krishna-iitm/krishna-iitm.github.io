<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>App.cc</name>
    <path>/Users/krishna/omnetpp-6.0.1/samples/TQDSimModule_final/</path>
    <filename>_app_8cc</filename>
    <includes id="_packet__m_8h" name="Packet_m.h" local="yes" imported="no">Packet_m.h</includes>
    <class kind="class">App</class>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_app_8cc.html</anchorfile>
      <anchor>aefcea387a398d5bc420e472bcfd49caf</anchor>
      <arglist>(App)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BurstyApp.cc</name>
    <path>/Users/krishna/omnetpp-6.0.1/samples/TQDSimModule_final/</path>
    <filename>_bursty_app_8cc</filename>
    <includes id="_packet__m_8h" name="Packet_m.h" local="yes" imported="no">Packet_m.h</includes>
    <class kind="class">BurstyApp</class>
    <member kind="define">
      <type>#define</type>
      <name>FSM_DEBUG</name>
      <anchorfile>_bursty_app_8cc.html</anchorfile>
      <anchor>af70e50e85456b54bffd9583a60377faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_bursty_app_8cc.html</anchorfile>
      <anchor>a6efc795dbfb164cf2c2dcda297e083c0</anchor>
      <arglist>(BurstyApp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>L2Queue.cc</name>
    <path>/Users/krishna/omnetpp-6.0.1/samples/TQDSimModule_final/</path>
    <filename>_l2_queue_8cc</filename>
    <includes id="_l2_queue_8h" name="L2Queue.h" local="yes" imported="no">L2Queue.h</includes>
    <includes id="network_topo_info_8h" name="networkTopoInfo.h" local="yes" imported="no">networkTopoInfo.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_l2_queue_8cc.html</anchorfile>
      <anchor>a41ba1c35972f7850a93070c723e070f8</anchor>
      <arglist>(L2Queue)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>L2Queue.h</name>
    <path>/Users/krishna/omnetpp-6.0.1/samples/TQDSimModule_final/</path>
    <filename>_l2_queue_8h</filename>
    <includes id="_packet__m_8h" name="Packet_m.h" local="yes" imported="no">Packet_m.h</includes>
    <class kind="class">L2Queue</class>
  </compound>
  <compound kind="file">
    <name>networkTopoInfo.cc</name>
    <path>/Users/krishna/omnetpp-6.0.1/samples/TQDSimModule_final/</path>
    <filename>network_topo_info_8cc</filename>
    <includes id="network_topo_info_8h" name="networkTopoInfo.h" local="yes" imported="no">networkTopoInfo.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>network_topo_info_8cc.html</anchorfile>
      <anchor>ab8405f9b1b856cf26e3e8e1715ba50d7</anchor>
      <arglist>(networkTopoInfo)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>networkTopoInfo.h</name>
    <path>/Users/krishna/omnetpp-6.0.1/samples/TQDSimModule_final/</path>
    <filename>network_topo_info_8h</filename>
    <includes id="_routing_8h" name="Routing.h" local="yes" imported="no">Routing.h</includes>
    <class kind="class">networkTopoInfo</class>
  </compound>
  <compound kind="file">
    <name>Packet_m.h</name>
    <path>/Users/krishna/omnetpp-6.0.1/samples/TQDSimModule_final/</path>
    <filename>_packet__m_8h</filename>
    <class kind="class">Packet</class>
    <namespace>omnetpp</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>_packet__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doParsimPacking</name>
      <anchorfile>_packet__m_8h.html</anchorfile>
      <anchor>a86527b1922943a181eb0650608f8fd03</anchor>
      <arglist>(omnetpp::cCommBuffer *b, const Packet &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doParsimUnpacking</name>
      <anchorfile>_packet__m_8h.html</anchorfile>
      <anchor>ab70d1ec53e8f5e6e4e06af32399c8eee</anchor>
      <arglist>(omnetpp::cCommBuffer *b, Packet &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>Packet *</type>
      <name>fromAnyPtr</name>
      <anchorfile>namespaceomnetpp.html</anchorfile>
      <anchor>a2522e107bfcf5ae3128ecdd1e9b8f32b</anchor>
      <arglist>(any_ptr ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Routing.cc</name>
    <path>/Users/krishna/omnetpp-6.0.1/samples/TQDSimModule_final/</path>
    <filename>_routing_8cc</filename>
    <includes id="_routing_8h" name="Routing.h" local="yes" imported="no">Routing.h</includes>
    <includes id="network_topo_info_8h" name="networkTopoInfo.h" local="yes" imported="no">networkTopoInfo.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_routing_8cc.html</anchorfile>
      <anchor>a6eeb74869f41c893ae49b8b4fd8c6290</anchor>
      <arglist>(Routing)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Routing.h</name>
    <path>/Users/krishna/omnetpp-6.0.1/samples/TQDSimModule_final/</path>
    <filename>_routing_8h</filename>
    <includes id="_packet__m_8h" name="Packet_m.h" local="yes" imported="no">Packet_m.h</includes>
    <class kind="class">Routing</class>
  </compound>
  <compound kind="class">
    <name>App</name>
    <filename>class_app.html</filename>
    <base>omnetpp::cSimpleModule</base>
    <member kind="function">
      <type></type>
      <name>App</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>acb8cbf3e285b91d0170ffe87df5989c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~App</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a34f1f253b1cef5f4ecbac66eaf6964ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>abcb09e0cc1f77f7d2749a741df2b978e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a6ca9817c72af5cff31bba68825bde3f3</anchor>
      <arglist>(cMessage *msg) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateUnicastPackt</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a583d339daa768863f32fd6f193234b9f</anchor>
      <arglist>(string trafficClass, int totalPacketsArrivedInCurrentSlot)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateBroadcastPacket</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a372e454ba198f3fad5af4aba966e7417</anchor>
      <arglist>(string trafficClass, int totalPacketsArrivedInCurrentSlot)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; int, std::string &gt;</type>
      <name>trafficType</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>abaf1754835054f2a540c7af7381221dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; int, int &gt;</type>
      <name>SourceDestinationPair</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a8beb09a0acd5406f84736c8215b97d9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>myAddress</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a50bdb7f8f609fbf0eda16c182db7eb58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numOfNodes</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a75c5eae7a2c331eb511f2ec6a6e6cf18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>packeSizeBytes</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>ae3fc485975f668a9d3a43bd4a4ada14c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>sourceNode</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a83fe21f61b402dfbe71c22faa49b19ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>destinationNode</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a589c5bfd74f60eda9a41e5752b4bff8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>timeSlotDuration</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>ab28cebfde6c2085fe780b43867da3d56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>lambda</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a37b2b2037158c962dab1532d47e5fe8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>PacketArrivalPerSlot</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a5ffec90fe5b0b5dbb4a790ea748bb6af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>TotaltimeSlot</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a7f91244537c6fbc7fe353cb75aad41fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>timeSlotCounter</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a6c5a5f135e730d285198f19a810a5362</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>traffic_class_index</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a6985bfd7714e3461d79f61c022ef6c0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>trafficType</type>
      <name>setTrafficType</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a433ae1bf033381ca486f2716d85a816d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SourceDestinationPair</type>
      <name>S_and_D_Pair</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a5fb728d30066c4c2729ac185a299681a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cMessage *</type>
      <name>generatePacket</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a576465b3d4590d6befa908b2e5f3ee5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cTopology *</type>
      <name>getTopoInfo</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>aee8063d4d4876489027c96c3c1ad672f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>simsignal_t</type>
      <name>endToEndDelayForUnEncryptedPcktsSignal</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a1d3362290d4e4f6f53e2cf8d89eed4e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>simsignal_t</type>
      <name>endToEndDelayForEncryptedPcktsSignal</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a3d94bfe09c11d6213f98c359d859c43c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>simsignal_t</type>
      <name>totalDelayByQueue_X_Signal</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>ae33366bb46ffe1d55326596206b7eb41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>simsignal_t</type>
      <name>totalDelayByQueue_Y_Signal</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a8d9676b7399732eb190d03b03e8faf43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>simsignal_t</type>
      <name>totalPropagationDelaySignal</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a1d793424f7d2b0f4defcf1081c6ccfb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>simsignal_t</type>
      <name>hopCountSignal</name>
      <anchorfile>class_app.html</anchorfile>
      <anchor>a69d951ff1e3cb87bb613417bec5a72f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BurstyApp</name>
    <filename>class_bursty_app.html</filename>
    <base>omnetpp::cSimpleModule</base>
    <member kind="function">
      <type></type>
      <name>BurstyApp</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a64652ad03a3115cbe605322b97798446</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BurstyApp</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>acea8923b3d41c0aafbe13a6a301e587f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>aae2738c0310baef1857d90524c1c0e7f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a8855e4bb3920379ad5fa9d625f7f0425</anchor>
      <arglist>(cMessage *msg) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>refreshDisplay</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>ad67eff7c2fa80c97acd70a3ef02ac41c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>processTimer</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>abf80ca9ecd4d3a9228591cb8177f0522</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>processPacket</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a3e4b5a8c94216f5112f2fdf13094e478</anchor>
      <arglist>(Packet *pk)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>generatePacket</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a6a63e428550bb5d0c8d05ed14f2d14f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>INIT</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a353b20bab11f8e8b7bfc1b88de9f378ca24b39d5cff7686aff08efb2c103f6ee9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>SLEEP</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a353b20bab11f8e8b7bfc1b88de9f378cae430fa73a068350e9fa32b175578eb22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>ACTIVE</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a353b20bab11f8e8b7bfc1b88de9f378cab2de83409b892e666a27ec8190f8afc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>SEND</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a353b20bab11f8e8b7bfc1b88de9f378ca6493bf0638ce492a7637d36353642aa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>INIT</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a353b20bab11f8e8b7bfc1b88de9f378ca24b39d5cff7686aff08efb2c103f6ee9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>SLEEP</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a353b20bab11f8e8b7bfc1b88de9f378cae430fa73a068350e9fa32b175578eb22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>ACTIVE</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a353b20bab11f8e8b7bfc1b88de9f378cab2de83409b892e666a27ec8190f8afc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>SEND</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a353b20bab11f8e8b7bfc1b88de9f378ca6493bf0638ce492a7637d36353642aa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>myAddress</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>aad86be5d74c297c73465811e456cc961</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>destAddresses</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a02e56d7a2f66e49d0361dd69166d7655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cPar *</type>
      <name>sleepTime</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a5b9ef72b43fff47bd7f279dfecef1cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cPar *</type>
      <name>burstTime</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>af3ece8742d95b52da59b27ea5ed97a63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cPar *</type>
      <name>sendIATime</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a885f2f761f20fc8c00711606e7c9ae9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cPar *</type>
      <name>packetLengthBytes</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>acf51ce8eb9af16caab6f6a5db75fe0fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cFSM</type>
      <name>fsm</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a424fc06f66ef4f88c5b9dbc6a56dd621</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>pkCounter</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a39af2595758bf90fc8d1030a6a84617a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cMessage *</type>
      <name>startStopBurst</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a1b11560ec6d15b723c79f6f37e86afd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cMessage *</type>
      <name>sendMessage</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a8b29559d5fd3b39058fd25d2bf440d64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numSent</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>add83d42b51ed7cdde1cb3d0b1039d1de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numReceived</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a0f917c592ec18e49d0c4dbc835caaf95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>simsignal_t</type>
      <name>endToEndDelaySignal</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a3f644d0b67c4141117a2bfc16ef8fefd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>simsignal_t</type>
      <name>hopCountSignal</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a404edb3a39f8d3b961f51573e5745a86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>simsignal_t</type>
      <name>sourceAddressSignal</name>
      <anchorfile>class_bursty_app.html</anchorfile>
      <anchor>a03705ead6148bfc40bdfd633e3957efa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>L2Queue</name>
    <filename>class_l2_queue.html</filename>
    <base>omnetpp::cSimpleModule</base>
    <member kind="function">
      <type></type>
      <name>L2Queue</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>a4950aa9f9f959e8f5bb6029bf6f887ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~L2Queue</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>a3d97633b2c57e07fc3d3e84e2372f202</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>a52a9c04a4a0083be6a414adc2660bbbf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>a24f6be4d0678c23d1642af2357d5bae7</anchor>
      <arglist>(cMessage *msg) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>refreshDisplay</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>adeefcf5f7d02b14b72cafab1037a24c9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>startTransmitting</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>a57d569103aa047b0ae90b496af58d24e</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>QueueCapacity</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>a0a9b865c19136d8d3b454782b8b5d8ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>linkCapacity</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>aef2fdd7d591e88fc47129796f09fdc0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>myAddress</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>a47311d2a411e427e95abb21845aeca4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cModule *</type>
      <name>targetModuleNetworkManager</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>a666b15beabe75515a5ee99699d29828d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; int, map&lt; int, int &gt; &gt;</type>
      <name>keyStorageBank</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>a1bb7925a8763e2b1f1c7604a5b3636c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>simtime_t</type>
      <name>timeToUpdateVirtualQueue</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>a600ff1790b33aae51e84ae82182bf8d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>minLinkWeight</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>afabde017e6a32f7bcaa28b27aaae69a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cQueue</type>
      <name>queue</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>a2057276d5149ae61345d3443f87a7aed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cMessage *</type>
      <name>endTransmissionEvent</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>ae9bddc428c9a78e40b3408006d73d416</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isBusy</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>af12e289b8abaf6f8ca8bc4089a181520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>timeSlot</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>a5e8299a8fceec287c38c8b019cc03962</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>TotaltimeSlot</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>abf0731b3a8c43161ad44251352883850</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>timeSlotCounter</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>ac2eeef644d5810c0eb0ed0e8f62ba9fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cMessage *</type>
      <name>timeSlotMsg</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>a49cca3bf3ee37f1c6dff681fb4263d38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cQueue</type>
      <name>queueForUncryptedPackets</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>ac0cab98174899cb195a509d52824471d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cQueue</type>
      <name>queueForEncryptedPackets</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>add90fe08bbdfa62c068cef38bd1c5301</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>simsignal_t</type>
      <name>qlenSignal</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>abb0f6d8dbfd1b97991515d2d916589e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>simsignal_t</type>
      <name>dropSignal</name>
      <anchorfile>class_l2_queue.html</anchorfile>
      <anchor>a2a8d98ba72a89ddd62e85a39fdc4f9d8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>networkTopoInfo</name>
    <filename>classnetwork_topo_info.html</filename>
    <base>omnetpp::cSimpleModule</base>
    <member kind="function">
      <type></type>
      <name>networkTopoInfo</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a3a1a82525aa79f58c1e3b247f86874a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~networkTopoInfo</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>ae0bc90478ff85c91970eb94202f92dd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateGraphByVirtualQueueLength</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>aaa259d16296ad806a30d83cf068d035e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateGraphByVQs</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a8dfddb61ed48283c9167fea21018fcae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>keyGenerationAndStoragePerSlot</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a2e45fcf4555b6ea482c3cc76be343e07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::map&lt; int, map&lt; int, int &gt; &gt;</type>
      <name>rTableCalForUniCast</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a03a9090526037faa4e5a48fc943eb562</anchor>
      <arglist>(cModule *node, int nodeAddress, bool initializeCall)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateVQonSrcArrvUnicastPacket</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>aa877d77b59cd23838fa046704d3fa0f9</anchor>
      <arglist>(int srcAddr, int dstAddr, std::map&lt; int, map&lt; int, int &gt; &gt; tempRTable, Packet *pkt, bool enableEncryption)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateVQforBroadcastTrafficArrivalAtSource</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>aaf7f50a8313db9ca1cfa67af0a41097f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::map&lt; int, map&lt; int, int &gt; &gt;</type>
      <name>rTableCalForUniCast_2</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a7851086f6078d9fc5cc27468c8c70c25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; int, map&lt; int, int &gt; &gt;</type>
      <name>returnKeyStorageBank</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>ab6d43a337d5b052b8e1029321984bc9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>findMstPerSlotFromAdjencyMatrix</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a09c9d9f000a56741afbb25638f683d8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>topologyModificationPerSlotForBroadCast</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a2d6af2eb645d728e1dac92e919e16698</anchor>
      <arglist>(int slotNumber)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>returnSlotCounterValue</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a200955c2694e3e34678b0ccdd610edc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>cTopology *</type>
      <name>returnTopologyObject</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>abb46eac5e92fbbbd1f3f030fcf581685</anchor>
      <arglist>(int temptimeSlotCounter)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>put_graph_weight_on_link</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a7b2fea74c1ae4215c809d70e3daa7ad4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPacketSize</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a6c909b381e7a4c6287470741711df78b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfNodes</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a99a3b808563306524fb32288f42c9c68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>afc1daa2211e15cfb75f67aa2a3ad7173</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a5e06b786ddf3c5b35b82d0f5472598e3</anchor>
      <arglist>(cMessage *msg) override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>num_of_nodes</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a847153a9f1b3f8df94ad26e94b7f4f45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cModule *</type>
      <name>targetModule</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a5f1e6804ac4a8f872c1f52166db5709d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long **</type>
      <name>graphNetwork_Broadcast_Traffic</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>adb69be481c393b4a6719254601acea25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long **</type>
      <name>graphMstperSlot_Broadcast</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a41dc47f51f41672e3775503514f75618</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long **</type>
      <name>graphForKeyBankStoragePerEdge</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>acfe52368b478b32890031316e6802819</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double **</type>
      <name>graphForlambdaPerEdge</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>ae658c5df3783b934eacaf4789e6c5176</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>linkCapacity</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a5204c2cf64961efbe2329034ca569d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>minLinkWeight</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>aa2616a107dae60fa98abbdd02b254516</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>packetLength</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a323178841cdef99bcbdc927daad6dad6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>timeSlot</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a41b082ddc54d31d0b7230d62220087bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>minKeyGenerationRate</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a728bb29510a5eb18bd0ae08b68db419f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>maxKeyGenerationRate</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a41896b92b0d2a1717894c55a5dbaced4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>timeSlotCounter</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a6a263651838341a2011e664123473433</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>TotaltimeSlot</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a2fd67695de60d59bc4c07a39a90e2d26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>keyInKeyBank</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>acf12de39f5421064a59f01c927d4be75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cTopology *</type>
      <name>getTopoInfo</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a1e2ba16af64d0665827cee40fc1efc2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>simsignal_t</type>
      <name>keyBankStatusWithStorageSignal</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a7137a1e417010be7d52f5424a4a1ff37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>simsignal_t</type>
      <name>keyBankStatusWithoutStorageSignal</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a1ee31dfb7dfffb8754e704e640968e2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; cTopology * &gt;</type>
      <name>topoMstVector</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>aee2840c267866167d1a83b8408667ac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; int, map&lt; int, int &gt; &gt;</type>
      <name>rTableUniCast</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a46a3f87539d1dbe8a0d5baae5212e35c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; int, map&lt; int, int &gt; &gt;</type>
      <name>virtualQueuePerEdge</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a8a7ce1034849682c1076257302b10152</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; int, map&lt; int, int &gt; &gt;</type>
      <name>Y_virtualQueue</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a7cb6cc10947dca157c95c5cdc316210c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; int, map&lt; int, int &gt; &gt;</type>
      <name>X_virtualQueue</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a3948af9fbb4c383c7c27054f5f1aa283</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; int, map&lt; int, int &gt; &gt;</type>
      <name>keyStorageBank</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>ae0bc327df5ee4a1921f8c9067c0ed28a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; int, map&lt; int, int &gt; &gt;</type>
      <name>tempKeyStorageBank</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>a5945eefaee42efab24bb5543104598a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cMessage *</type>
      <name>virtualQueueUpdation</name>
      <anchorfile>classnetwork_topo_info.html</anchorfile>
      <anchor>aaa308678a0dab00e07461a76696be834</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Packet</name>
    <filename>class_packet.html</filename>
    <base>omnetpp::cPacket</base>
    <member kind="function">
      <type></type>
      <name>Packet</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a2498201d556e3884470c08c1ad06d379</anchor>
      <arglist>(const char *name=nullptr, short kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Packet</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>ae8d5dfea51fa7fe55e4705b176f326ec</anchor>
      <arglist>(const Packet &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Packet</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a69d431d5730177a1bf6e1f8bbbbb6066</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Packet &amp;</type>
      <name>operator=</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a91a6b0c6ea561b9726597468acac252d</anchor>
      <arglist>(const Packet &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Packet *</type>
      <name>dup</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>af7d0229e5ebffb6d55015b0648b05c62</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a03beeb074e3fb7fa22b30f4c3ad99a22</anchor>
      <arglist>(omnetpp::cCommBuffer *b) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>af46e301b7f2edfaef7f622c5521f17cc</anchor>
      <arglist>(omnetpp::cCommBuffer *b) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getSrcAddr</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a3df19ca0f76939f4f4e6ce4471ca5abf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSrcAddr</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>ad4446e08653d3da7fd887e31755e6303</anchor>
      <arglist>(int srcAddr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDestAddr</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>ad8cb3700448948f75451939981047f5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDestAddr</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a66667a03d57fb6c61c306fe19aefdd6a</anchor>
      <arglist>(int destAddr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getHopCount</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a955b4534d680337e7a7928e998211f1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHopCount</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a992007aed69d2cb30e265f0112030618</anchor>
      <arglist>(int hopCount)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getSize</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>ae39d70818f2bd8a79d29677fd1aaa95b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSize</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a7a813b1c6a7ebf3e2e5131ff78ee2c44</anchor>
      <arglist>(double size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRouteArraySize</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>af50b80dcedd0ead2c2d4b2dd4d92f07e</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getRouteArraySize</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a8352ad79b2cc72b08a40655e36a1dccb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getRoute</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>ad6c2addc20d04ad270824f97bb8ef44b</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRoute</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a247c3943e0da3fe32803a31e7239ff95</anchor>
      <arglist>(size_t k, int route)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertRoute</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>af8a31c0a5129c29152124fe50998af2c</anchor>
      <arglist>(size_t k, int route)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRoute</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>ae04dc7337ba3bb3d4f65acdcd3e84c5f</anchor>
      <arglist>(int route)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>appendRoute</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>adf2b2346ede0b6fdb80bffbdde47a28b</anchor>
      <arglist>(int route)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>eraseRoute</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>aad680700c558104aeaa369d80b581545</anchor>
      <arglist>(size_t k)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getArraySizeAndIndex</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a4521d65cea8ac8c7a99cf8ae68af089d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setArraySizeAndIndex</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>ac34da55276134ea2156f3576aa3d7f9b</anchor>
      <arglist>(int arraySizeAndIndex)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual omnetpp::simtime_t</type>
      <name>getTotalQueueDelay_X</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a19ad0b39a54efbdf3047330af51c294c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTotalQueueDelay_X</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a225bcd700a5e24e62013e3d062363d14</anchor>
      <arglist>(omnetpp::simtime_t TotalQueueDelay_X)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual omnetpp::simtime_t</type>
      <name>getTotalQueueDelay_Y</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>ab0eedefb888765f894054604b7606e17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTotalQueueDelay_Y</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a7aa7adaca5d7fae15d47b45c2c99c930</anchor>
      <arglist>(omnetpp::simtime_t TotalQueueDelay_Y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getPacketName</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a87c64ba245b6b987fb06570ec1d68aa3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPacketName</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a5585aa41193d33ab2d00f92b623af182</anchor>
      <arglist>(const char *packetName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTimeSlotCounter</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a2d8b996ef6a93470bfce83d49f0d62a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTimeSlotCounter</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>ab20f22800319dde1222e26380f8dc5c3</anchor>
      <arglist>(int timeSlotCounter)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getEnableEncryption</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a8e520e3f160af97a92d1c0fb5c45a1e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setEnableEncryption</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a73ed7418d2f29c37ea3809f1d73c7fe1</anchor>
      <arglist>(bool enableEncryption)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a789e06a18e8e65f2447167bc2de5e3dc</anchor>
      <arglist>(const Packet &amp;)=delete</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>srcAddr</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a88f37c63fbb2a95a532b6ac6166955a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>destAddr</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a7a9531a7153429abed7b0e491b7fc4d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>hopCount</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a8c1b4fb3e0287e5e302cabd0d254b75f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>size</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>ae00c975e3fcd1995a5d8a49106149aee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int *</type>
      <name>route</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a3c5011f1b1750b3680dc3abd0a2ab59d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>route_arraysize</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a158f0ac6515b3ad7f260c36571babb24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>arraySizeAndIndex</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>af9f3809004dca92a362db6e8559c0854</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>omnetpp::simtime_t</type>
      <name>TotalQueueDelay_X</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>aded9456c1369ca2cd42cb10a32b3b247</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>omnetpp::simtime_t</type>
      <name>TotalQueueDelay_Y</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a176af87af7ceaa02cec6d6cb26eb7413</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>omnetpp::opp_string</type>
      <name>packetName</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>ae4373bca80d9a19c9159e63ebeb15b61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>timeSlotCounter</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a9efe1b252a6a456051f4eb1e04474ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>enableEncryption</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a026dd6832e90fd306b4fd63b9cba6357</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_packet.html</anchorfile>
      <anchor>a95be293f767f42ce2e87f636d0a7e153</anchor>
      <arglist>(const Packet &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Routing</name>
    <filename>class_routing.html</filename>
    <base>omnetpp::cSimpleModule</base>
    <member kind="function">
      <type></type>
      <name>Routing</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>a441089a77e1d396dd82bf23f2523949f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Routing</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>a53fba92a5bae29fa140d93d8fb7367f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>a7452f74e7d3a137f682fd168bab0fb5f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>a7887f154c61dd0e662ee000e24409a24</anchor>
      <arglist>(cMessage *msg) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleBroadCastTraffic</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>a11132a65af0a15a36ae9cfe1c8bcbd91</anchor>
      <arglist>(Packet *pk)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>myAddress</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>ab1ef7ab9ebf282cd94329f2c51aeadb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>number_of_nodes</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>a522d1bafc61770edd8ae5c0cf77c01e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cModule *</type>
      <name>targetModuleNetworkManager</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>ab68865f3a05d42366d8544f59b0aa300</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>timeSlot</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>ad77803c13b8fcf7818b72e3835db7d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cMessage *</type>
      <name>timeSlotMsg</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>a18b82fb27578e5c6480206b670ce9507</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>timeSlotCounter</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>aee035e70341c20eaf83b9aa3ddd6b506</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>TotaltimeSlot</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>ad1ced1d46ae1038e9e9f7481575cbe21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; int, map&lt; int, int &gt; &gt;</type>
      <name>dynamicRoutingTableUniCast</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>a316028cd301d281386f0f3d8565ed154</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>omnetpp</name>
    <filename>namespaceomnetpp.html</filename>
    <member kind="function">
      <type>Packet *</type>
      <name>fromAnyPtr</name>
      <anchorfile>namespaceomnetpp.html</anchorfile>
      <anchor>a2522e107bfcf5ae3128ecdd1e9b8f32b</anchor>
      <arglist>(any_ptr ptr)</arglist>
    </member>
  </compound>
</tagfile>
